{
    // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Template for C++ program": {
        "prefix": "cpp",
        "body": [
            "#include <iostream>",
            "using namespace std;",
            "",
            "int main() {",
            "    $0",
            "    return 0;",
            "}",
        ],
        "description": "Template for C++ program",
    },
    "Class": {
        "prefix": "class",
        "body": [
            "class ${1:className} {",
            "private:",
            "    ${2:/* data */}",
            "",
            "public:",
            "    $1(${3:/* args */}) {",
            "        $0",
            "}",
            "    ~$1() {}",
            "};"
        ],
        "description": "Template for class",
    },
    "GetSet": {
        "prefix": "gst",
        "body": [
            "",
            "${1:int} ${2:varName};",
            "$1 get$2() const { return this->$2; }",
            "void set$2($1 $2) { this->$2 = $2; }",
            "// cout << \"\\n$2: \\t\\t\" << this->get$2();",
            "",
        ],
        "description": "Getter and Setter",
    }
}