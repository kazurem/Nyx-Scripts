li code {
    background-color: #ffff00c0;
}

code {
    white-space: pre-wrap;
}

span.smallcaps {
    font-variant: small-caps;
}

div.columns {
    display: flex;
    gap: min(4vw, 1.5em);
}

div.column {
    flex: auto;
    overflow-x: auto;
}

div.hanging-indent {
    margin-left: 1.5em;
    text-indent: -1.5em;
}

/* The extra [class] is a hack that increases specificity enough to
override a similar rule in reveal.js */
ul.task-list[class] {
    list-style: none;
}

ul.task-list li input[type="checkbox"] {
    font-size: inherit;
    width: 0.8em;
    margin: 0 0.8em 0.2em -1.6em;
    vertical-align: middle;
}

.display.math {
    display: block;
    text-align: center;
    margin: 0.5rem auto;
}

html {
    -webkit-text-size-adjust: 100%;
}

/* CSS for syntax highlighting */
pre > code.sourceCode {
    white-space: pre;
    position: relative;
}

pre > code.sourceCode > span {
    display: inline-block;
    line-height: 1.25;
}

pre > code.sourceCode > span:empty {
    height: 1.2em;
}

.sourceCode {
    overflow: visible;
}

code.sourceCode > span {
    color: inherit;
    text-decoration: inherit;
}

div.sourceCode {
    margin: 1em 0;
}

pre.sourceCode {
    margin: 0;
}

@media screen {
    div.sourceCode {
        overflow: auto;
    }
}

@media print {
    pre > code.sourceCode {
        white-space: pre-wrap;
    }

    pre > code.sourceCode > span {
        text-indent: -5em;
        padding-left: 5em;
    }
}

pre.numberSource code {
    counter-reset: source-line 0;
}

pre.numberSource code > span {
    position: relative;
    left: -4em;
    counter-increment: source-line;
}

pre.numberSource code > span > a:first-child::before {
    content: counter(source-line);
    position: relative;
    left: -1em;
    text-align: right;
    vertical-align: baseline;
    border: none;
    display: inline-block;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    padding: 0 4px;
    width: 4em;
    background-color: #232629;
    color: #7a7c7d;
}

pre.numberSource {
    margin-left: 3em;
    border-left: 1px solid #7a7c7d;
    padding-left: 4px;
}

div.sourceCode {
    color: #cfcfc2;
    background-color: #232629;
}

@media screen {
    pre > code.sourceCode > span > a:first-child::before {
        text-decoration: underline;
    }
}

/* Normal */
code span {
    color: #cfcfc2;
}

/* Alert */
code span.al {
    color: #95da4c;
    background-color: #4d1f24;
    font-weight: bold;
}

/* Annotation */
code span.an {
    color: #3f8058;
}

/* Attribute */
code span.at {
    color: #2980b9;
}

/* BaseN */
code span.bn {
    color: #f67400;
}

/* BuiltIn */
code span.bu {
    color: #7f8c8d;
}

/* ControlFlow */
code span.cf {
    color: #fdbc4b;
    font-weight: bold;
}

/* Char */
code span.ch {
    color: #3daee9;
}

/* Constant */
code span.cn {
    color: #27aeae;
    font-weight: bold;
}

/* Comment */
code span.co {
    color: #7a7c7d;
}

/* CommentVar */
code span.cv {
    color: #7f8c8d;
}

/* Documentation */
code span.do {
    color: #a43340;
}

/* DataType */
code span.dt {
    color: #2980b9;
}

/* DecVal */
code span.dv {
    color: #f67400;
}

/* Error */
code span.er {
    color: #da4453;
    text-decoration: underline;
}

/* Extension */
code span.ex {
    color: #0099ff;
    font-weight: bold;
}

/* Float */
code span.fl {
    color: #f67400;
}

/* Function */
code span.fu {
    color: #8e44ad;
}

/* Import */
code span.im {
    color: #27ae60;
}

/* Information */
code span.in {
    color: #c45b00;
}

/* Keyword */
code span.kw {
    color: #cfcfc2;
    font-weight: bold;
}

/* Operator */
code span.op {
    color: #cfcfc2;
}

/* Other */
code span.ot {
    color: #27ae60;
}

/* Preprocessor */
code span.pp {
    color: #27ae60;
}

/* RegionMarker */
code span.re {
    color: #2980b9;
    background-color: #153042;
}

/* SpecialChar */
code span.sc {
    color: #3daee9;
}

/* SpecialString */
code span.ss {
    color: #da4453;
}

/* String */
code span.st {
    color: #f44f4f;
}

/* Variable */
code span.va {
    color: #27aeae;
}

/* VerbatimString */
code span.vs {
    color: #da4453;
}

/* Warning */
code span.wa {
    color: #da4453;
}